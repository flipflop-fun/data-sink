version: "3.9"

services:
  postgres:
    image: postgres:17-alpine
    container_name: flipflop-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  flipflop-indexer-devnet:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flipflop-indexer-devnet
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME_DEVNET}
      MANIFEST: /app/flipflop-indexer-devnet-v0.1.0.spkg
      SUBSTREAMS_API_TOKEN: ${SUBSTREAMS_API_TOKEN_DEVNET}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
    volumes:
      - ./:/app:ro
      - devnet-data:/var/lib/substreams
    restart: unless-stopped

  flipflop-indexer-mainnet:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flipflop-indexer-mainnet
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME_MAINNET}
      MANIFEST: /app/flipflop-indexer-mainnet-v0.1.0.spkg
      SUBSTREAMS_API_TOKEN: ${SUBSTREAMS_API_TOKEN_MAINNET}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - postgres
    volumes:
      - ./:/app:ro
      - mainnet-data:/var/lib/substreams
    restart: unless-stopped

  # Graph server for devnet (PostGraphile)
  flipflop-graph-devnet:
    image: node:18-alpine
    container_name: flipflop-graph-devnet
    env_file:
      - .env
    environment:
      # 仅覆盖 DB_NAME，其他 DB_* 从 .env 继承
      DB_NAME: ${DB_NAME_DEVNET}
      UV_THREADPOOL_SIZE: "64"
      NODE_OPTIONS: "--max-old-space-size=1024"
    depends_on:
      - postgres
      - flipflop-indexer-devnet
    command: >
      sh -lc "npx -y -p postgraphile -p express -p cors node -e 'const express=require(\"express\");const cors=require(\"cors\");const {postgraphile}=require(\"postgraphile\");const app=express();const methods=[\"GET\",\"POST\",\"HEAD\",\"OPTIONS\"];const originsEnv=process.env.GRAPH_CORS||\"*\";const origins=originsEnv===\"*\"?true:originsEnv.split(/[,\\s]+/).filter(Boolean);const corsOptions={origin:origins,methods,credentials:true,allowedHeaders:[\"Content-Type\",\"Authorization\",\"X-Requested-With\"],exposedHeaders:[\"Content-Length\",\"X-Request-Id\"]};app.use((req,res,next)=>{res.header(\"Access-Control-Allow-Methods\",methods.join(\", \"));next();});app.options(\"*\",cors(corsOptions));app.use(cors(corsOptions));app.use(postgraphile(process.env.DB_DSN,(process.env.DB_SCHEMA||\"public\").split(/[,\\s]+/),{graphiql:true,enhanceGraphiql:true}));const port=process.env.PORT||4000;app.listen(port,()=>console.log(\"Graph (devnet) on\",port));'"
    ports:
      - "${GRAPH_PORT_DEVNET:-5051}:${GRAPH_PORT_DEVNET:-5051}"
    restart: unless-stopped

  # Graph server for mainnet (PostGraphile)
  flipflop-graph-mainnet:
    image: node:18-alpine
    container_name: flipflop-graph-mainnet
    env_file:
      - .env
    environment:
      DB_NAME: ${DB_NAME_MAINNET}
      UV_THREADPOOL_SIZE: "64"
      NODE_OPTIONS: "--max-old-space-size=1024"
    depends_on:
      - postgres
    command: >
      sh -lc "npx -y -p postgraphile -p express -p cors node -e 'const express=require(\"express\");const cors=require(\"cors\");const {postgraphile}=require(\"postgraphile\");const app=express();const methods=[\"GET\",\"POST\",\"HEAD\",\"OPTIONS\"];const originsEnv=process.env.GRAPH_CORS||\"*\";const origins=originsEnv===\"*\"?true:originsEnv.split(/[,\\s]+/).filter(Boolean);const corsOptions={origin:origins,methods,credentials:true,allowedHeaders:[\"Content-Type\",\"Authorization\",\"X-Requested-With\"],exposedHeaders:[\"Content-Length\",\"X-Request-Id\"]};app.use((req,res,next)=>{res.header(\"Access-Control-Allow-Methods\",methods.join(\", \"));next();});app.options(\"*\",cors(corsOptions));app.use(cors(corsOptions));app.use(postgraphile(process.env.DB_DSN,(process.env.DB_SCHEMA||\"public\").split(/[,\\s]+/),{graphiql:true,enhanceGraphiql:true}));const port=process.env.PORT||4001;app.listen(port,()=>console.log(\"Graph (mainnet) on\",port));'"
    ports:
      - "${GRAPH_PORT_MAINNET:-5050}:${GRAPH_PORT_MAINNET:-5050}"
    restart: unless-stopped

volumes:
  postgres-data: {}
  devnet-data: {}
  mainnet-data: {}